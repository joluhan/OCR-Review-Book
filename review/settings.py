"""
Django settings for the review project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see:
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

# Importing Path class from pathlib module for path operations
from pathlib import Path

# BASE_DIR is a project root directory. It is used to define paths to various directories.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: The secret key should be kept secret in production!
SECRET_KEY = 'django-insecure-$c5hvo#=%9=z(yfh3$*fw@%@xvd89i0zlzv@hwt07jr2+&=f+_'

# SECURITY WARNING: Debug mode should not be turned on in production!
DEBUG = True

# Defines the list of host/domain names that this Django site can serve.
ALLOWED_HOSTS = []

# Application definition section specifies Django and third-party apps to include in the project.
INSTALLED_APPS = [
    'django.contrib.admin',  # Enables the admin interface
    'django.contrib.auth',  # Authentication system
    'django.contrib.contenttypes',  # Framework for content types
    'django.contrib.sessions',  # Session management
    'django.contrib.messages',  # Messaging framework
    'django.contrib.staticfiles',  # Managing static files (CSS, JavaScript, Images)
    'accounts',  # Custom app for user accounts
    'ltreview_app',  # Custom app for the LITReview project
]

# Middleware is a framework of hooks into Django's request/response processing.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Manages security aspects
    'django.contrib.sessions.middleware.SessionMiddleware',  # Manages sessions across requests
    'django.middleware.common.CommonMiddleware',  # Handles common tasks
    'django.middleware.csrf.CsrfViewMiddleware',  # Cross-site request forgery protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Associates users with requests using sessions
    'django.contrib.messages.middleware.MessageMiddleware',  # Adds a message system to the framework
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Prevents clickjacking
]

# Defines the root URL configuration module for the project.
ROOT_URLCONF = 'review.urls'

# Templates configuration including the directories and options for template processing.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['ltreview_app/templates'],  # Custom directory for project templates
        'APP_DIRS': True,  # Django will look for a "templates" subdirectory in each app
        'OPTIONS': {
            'context_processors': [
                # Context processors add variables to the context of a template
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application path for Django's WSGI support.
WSGI_APPLICATION = 'review.wsgi.application'

# Database configuration. Uses SQLite by default for simplicity.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation configuration to enhance security.
AUTH_PASSWORD_VALIDATORS = [
    # Validators enforce password strength policies
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization settings for localizing the project.
LANGUAGE_CODE = 'en-us'  # Default language code
TIME_ZONE = 'UTC'  # Default time zone
USE_I18N = True  # Enables Django's translation system
USE_TZ = True  # Enables timezone support

# Static files (CSS, JavaScript, Images) settings.
STATIC_URL = 'static/'

# Specifies the default auto field type for models.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model configuration.
AUTH_USER_MODEL = 'accounts.User'

# Authentication views configuration.
LOGIN_URL = 'login'  # URL for the login view
LOGIN_REDIRECT_URL = 'feed'  # URL to redirect to after login
LOGOUT_REDIRECT_URL = 'login'  # URL to redirect to after logout
